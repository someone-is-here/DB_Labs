# Generated by Django 4.1.3 on 2022-12-04 12:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractUsers',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('login', models.CharField(max_length=100, unique=True)),
                ('email', models.CharField(max_length=256, unique=True)),
                ('password', models.TextField()),
            ],
            options={
                'db_table': 'abstract_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Albums',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('release_date', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'albums',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=56, unique=True)),
                ('iso', models.CharField(max_length=2, unique=True)),
            ],
            options={
                'db_table': 'countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Genres',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'genres',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Instruments',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'instruments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Labels',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150, unique=True)),
                ('website', models.CharField(blank=True, max_length=256, null=True)),
                ('foundation_year', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'labels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Logging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation', models.CharField(max_length=1)),
                ('time', models.DateTimeField()),
                ('message', models.CharField(max_length=100)),
                ('abstr_user_id', models.IntegerField()),
                ('login', models.CharField(max_length=100)),
                ('role_id', models.CharField(max_length=100)),
                ('additional_info', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'logging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Playlists',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'playlists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subscriptions',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=150, unique=True)),
                ('cost', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'subscriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tracks',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('timing', models.TimeField()),
                ('likes', models.BigIntegerField()),
                ('streaming', models.BigIntegerField()),
                ('storage_path', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'tracks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Artists',
            fields=[
                ('id', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='streaming.abstractusers')),
                ('name', models.CharField(max_length=747, unique=True)),
                ('website', models.CharField(max_length=256, unique=True)),
                ('tour_dates', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'artists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlaylistAbstrUser',
            fields=[
                ('playlist', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='streaming.playlists')),
            ],
            options={
                'db_table': 'playlist_abstr_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlaylistTrack',
            fields=[
                ('track', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='streaming.tracks')),
            ],
            options={
                'db_table': 'playlist_track',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackGenre',
            fields=[
                ('track', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='streaming.tracks')),
            ],
            options={
                'db_table': 'track_genre',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistAlbum',
            fields=[
                ('artist', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='streaming.artists')),
            ],
            options={
                'db_table': 'artist_album',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistGenre',
            fields=[
                ('artist', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='streaming.artists')),
            ],
            options={
                'db_table': 'artist_genre',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistInstrument',
            fields=[
                ('artist', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='streaming.artists')),
            ],
            options={
                'db_table': 'artist_instrument',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistLabel',
            fields=[
                ('artist', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='streaming.artists')),
            ],
            options={
                'db_table': 'artist_label',
                'managed': False,
            },
        ),
    ]
